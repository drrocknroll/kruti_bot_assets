import telebot
from assistant import AutonomousAssistant
import json

bot = telebot.TeleBot("–í–ê–®_API_–¢–û–ö–ï–ù")
assistant = AutonomousAssistant()

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "üõ°Ô∏è –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ ProjectGuardian –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n–ö–æ–º–∞–Ω–¥—ã:\n/report - –æ—Ç—á—ë—Ç\n/add_project - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")

@bot.message_handler(commands=['report'])
def send_report(message):
    report = assistant.generate_report()
    bot.send_message(message.chat.id, f"üìä –û—Ç—á—ë—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤:\n{json.dumps(report, indent=2, ensure_ascii=False)}")

@bot.message_handler(commands=['add_project'])
def add_project(message):
    msg = bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å—Ä–æ–∫ (—Ñ–æ—Ä–º–∞—Ç: –ù–∞–∑–≤–∞–Ω–∏–µ;–ì–ì–ì–ì-–ú–ú-–î–î)")
    bot.register_next_step_handler(msg, process_project)

def process_project(message):
    try:
        name, deadline = message.text.split(';')
        result = assistant.add_project(name, deadline)
        bot.send_message(message.chat.id, result)
    except Exception as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    bot.infinity_polling()